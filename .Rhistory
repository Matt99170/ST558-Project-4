shiny::runApp('C:/Users/Home Pc/Desktop/ST558aProj4')
runApp('C:/Users/Home Pc/Desktop/ST558aProj4')
runApp('C:/Users/Home Pc/Desktop/ST558aProj4')
runApp('C:/Users/Home Pc/Desktop/ST558aProj4')
runApp('C:/Users/Home Pc/Desktop/ST558aProj4')
runApp('C:/Users/Home Pc/Desktop/ST558aProj4')
runApp('C:/Users/Home Pc/Desktop/ST558Proj4')
runApp('C:/Users/Home Pc/Desktop/ST558Proj4')
# Read data
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
weather
str(weather)
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
weather<- weather%>% play=as.factor(play)
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
weather<- weather$play
runApp('C:/Users/Home Pc/Desktop/ST558Proj4')
runApp('C:/Users/Home Pc/Desktop/ST558Proj4')
runApp('C:/Users/Home Pc/Desktop/ST558Proj4')
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
weather%>% mutate(play=as.factor(play))
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
weather
str(weather)
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
weather
str(weather)
weather%>% mutate(play=as.factor(play))
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
weather
str(weather)
weather<-weather%>% mutate(play=as.factor(play))
str(weather)
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
weather
str(weather)
weather<-weather%>% mutate(play=as.factor(play))%>% mutate(outlook=as.factor(outlook))
str(weather)
runApp('C:/Users/Home Pc/Desktop/ST558Proj4')
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
weather
str(weather)
weather<-weather%>% mutate(play=as.factor(play))%>% mutate(outlook=as.factor(outlook))
str(weather)
View(weather)
test <- read.csv(paste("input", ".csv", sep=""), header = TRUE)
runApp('C:/Users/Home Pc/Desktop/ST558Proj4')
runApp('C:/Users/Home Pc/Desktop/ST558Proj4')
View(test)
str(test)
test <- read.csv(paste("input", ".csv", sep=""), header = TRUE)
library(shiny)
library(shinythemes)
library(data.table)
library(RCurl)
library(randomForest)
library(tidyverse)
# Read data
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
weather
str(weather)
weather<-weather%>% mutate(play=as.factor(play))%>% mutate(outlook=as.factor(outlook))
str(weather)
View(weather)
# Build model
model <- randomForest(play ~ ., data = weather, ntree = 500, mtry = 4, importance = TRUE)
# Save model to RDS file
# saveRDS(model, "model.rds")
# Read in the RF model
#model <- readRDS("model.rds")
####################################
# User interface                   #
####################################
ui <- fluidPage(theme = shinytheme("united"),
# Page header
headerPanel('Play Golf?'),
# Input values
sidebarPanel(
HTML("<h3>Input parameters</h3>"),
selectInput("outlook", label = "Outlook:",
choices = list("Sunny" = "sunny", "Overcast" = "overcast", "Rainy" = "rainy"),
selected = "Rainy"),
sliderInput("temperature", "Temperature:",
min = 64, max = 86,
value = 70),
sliderInput("humidity", "Humidity:",
min = 65, max = 96,
value = 90),
selectInput("windy", label = "Windy:",
choices = list("Yes" = "TRUE", "No" = "FALSE"),
selected = "TRUE"),
actionButton("submitbutton", "Submit", class = "btn btn-primary")
),
mainPanel(
tags$label(h3('Status/Output')), # Status/Output Text Box
verbatimTextOutput('contents'),
tableOutput('tabledata') # Prediction results table
)
)
####################################
# Server                           #
####################################
server <- function(input, output, session) {
# Input Data
datasetInput <- reactive({
# outlook,temperature,humidity,windy,play
df <- data.frame(
Name = c("outlook",
"temperature",
"humidity",
"windy"),
Value = as.character(c(input$outlook,
input$temperature,
input$humidity,
input$windy)),
stringsAsFactors = FALSE)
play <- "play"
df <- rbind(df, play)
input <- transpose(df)
write.table(input,"input.csv", sep=",", quote = FALSE, row.names = FALSE, col.names = FALSE)
test <- read.csv(paste("input", ".csv", sep=""), header = TRUE)
str(test)
library(shiny)
library(shinythemes)
library(data.table)
library(RCurl)
library(randomForest)
library(tidyverse)
# Read data
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
weather
str(weather)
weather<-weather%>% mutate(play=as.factor(play))%>% mutate(outlook=as.factor(outlook))
str(weather)
# Build model
model <- randomForest(play ~ ., data = weather, ntree = 500, mtry = 4, importance = TRUE)
# Save model to RDS file
# saveRDS(model, "model.rds")
# Read in the RF model
#model <- readRDS("model.rds")
####################################
# User interface                   #
####################################
ui <- fluidPage(theme = shinytheme("united"),
# Page header
headerPanel('Play Golf?'),
# Input values
sidebarPanel(
HTML("<h3>Input parameters</h3>"),
selectInput("outlook", label = "Outlook:",
choices = list("Sunny" = "sunny", "Overcast" = "overcast", "Rainy" = "rainy"),
selected = "Rainy"),
sliderInput("temperature", "Temperature:",
min = 64, max = 86,
value = 70),
sliderInput("humidity", "Humidity:",
min = 65, max = 96,
value = 90),
selectInput("windy", label = "Windy:",
choices = list("Yes" = "TRUE", "No" = "FALSE"),
selected = "TRUE"),
actionButton("submitbutton", "Submit", class = "btn btn-primary")
),
mainPanel(
tags$label(h3('Status/Output')), # Status/Output Text Box
verbatimTextOutput('contents'),
tableOutput('tabledata') # Prediction results table
)
)
####################################
# Server                           #
####################################
server <- function(input, output, session) {
# Input Data
datasetInput <- reactive({
# outlook,temperature,humidity,windy,play
df <- data.frame(
Name = c("outlook",
"temperature",
"humidity",
"windy"),
Value = as.character(c(input$outlook,
input$temperature,
input$humidity,
input$windy)),
stringsAsFactors = FALSE)
play <- "play"
df <- rbind(df, play)
input <- transpose(df)
write.table(input,"input.csv", sep=",", quote = FALSE, row.names = FALSE, col.names = FALSE)
test <- read.csv(paste("input", ".csv", sep=""), header = TRUE)
View(test)
play <- "play"
df <- rbind(df, play)
input <- transpose(df)
write.table(input,"input.csv", sep=",", quote = FALSE, row.names = FALSE, col.names = FALSE)
test <- read.csv(paste("input", ".csv", sep=""), header = TRUE)
View(test)
test <- read.csv(paste("input", ".csv", sep=""), header = TRUE)
str(test)
play <- "play"
df <- rbind(df, play)
runApp('C:/Users/Home Pc/Desktop/ST558Proj4')
write.table(input,"input.csv", sep=",", quote = FALSE, row.names = FALSE, col.names = FALSE)
play <- "play"
df <- rbind(df, play)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
